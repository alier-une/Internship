# Написать программу, которая открывает файл для чтения, читает его содержимое и закрывает файл автоматически с
# использованием with.


with open('example.txt') as file:
    content = file.read()
    print(content)


# Создайте классы Car, Driver Car, свойства: mileage (пробег), is_turned_on, driver Driver,
# наследуется от класса Person, опишите на своё усмотрение Далее, создайте контекстный менеджер, который будет
# принимать в себя аргументы car, driver, и при инициализации контекстного менеджера, будет включать двигатель
# машины, и каждую секунду пока двигатель активен, добавлять +1 к mileage, и когда мы выходим из контекста,
# двигатель глушился и реализуйте валидацию ситуации, когда пользователь пытается завести уже заведенную машину.


class Car:
    def __init__(self, mileage, is_turned_on, driver):
        self.mileage = mileage
        self.is_turned_on = is_turned_on
        self.driver = Driver


class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age


class Driver(Person):
    def __init__(self, name, age):
        super().__init__(name, age)


class MyContexManager:
    def __init__(self, car, driver):
        self.car = Car
        self.driver = Driver

# Дополнительно: добавьте валидацию, что машиной может управлять только тот человек, чья это машина,
# и возвращать ошибку, если машиной начал управлять не собственник машины. Затем, поменяйте свойство driver,
# на drivers, и реализуйте логику чтобы собственников могло быть несколько.
#
# Супер-дополнительно: реализуйте метод, с помощью которого можно будет узнать каким т/c
# в данный момент управляет водитель, и какими машинами владеет
